openapi: 3.0.0

info:
  version: 1.0.0
  title: 'MelodyAuctions Web API'
  description: 'Web Resources Specification (A7) for MelodyAuctions'

servers:
- url: http://lbaw.fe.up.pt
  description: Production server

externalDocs:
  description: Find more info here.
  url: https://git.fe.up.pt/lbaw/lbaw2223/lbaw2211

tags:
  - name: 'M01: Authentication and Profile'
  - name: 'M02: Auctions'
  - name: 'M03: Bids'
  - name: 'M04: Notifications, Follows, Reviews'
  - name: 'M05: Admin Area and Reports'
  - name: 'M06: Static/Home pages'

paths:
# M01: Authentication and Profile
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Provide login form. Access: PUB'
      tags:
        - 'M01: Authentication and Profile'
      responses:
        '200':
          description: 'Ok. Show log-in UI'
    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication and Profile'
 
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                usernameOrEmail:          # <!--- form field name
                  type: string 
                password:    # <!--- form field name
                  type: string
              required:
                - usernameOrEmail
                - password
 
      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/users/{username}'
                302Error:
                  description: 'Failed authentication. Redirect to login form.'
                  value: '/login'
 
  /logout:

    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the current authenticated used. Access: USR'
      tags:
        - 'M01: Authentication and Profile'
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to login form.'
                  value: '/login'

  /register:
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provide new user registration form. Access: PUB'
      tags:
        - 'M01: Authentication and Profile'
      responses:
        '200':
          description: 'Ok. Show sign-up UI'

  /user:
    post:
      operationId: R105
      summary: 'R105: Create user'
      description: 'Processes the new user registration form submission. Access: PUB'
      tags:
        - 'M01: Authentication and Profile'

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                username:
                  type: string
                contact:
                  type: string
                description:
                  type: string
                picture:
                  type: string
                  format: binary
              required:
                - name
                - username
                - email
                - password
                - contact
                - description

      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/users/{username}'
                302Failure:
                  description: 'Failed authentication. Redirect to login form.'
                  value: '/login'

  /user/{username}:
    get:
      operationId: R105
      summary: 'R106: View user profile'
      description: 'Show the individual user profile. Access: USR'
      tags:
        - 'M01: Authentication and Profile'

      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/users/{username}'
                302Failure:
                  description: 'Failed authentication. Redirect to login form.'
                  value: '/login'
    delete:
      operationId: R107
      summary: 'R107: Delete user'
      description: 'Delete the current authenticated user. Access: OWN ADM'
      tags:
        - 'M01: Authentication and Profile'
      responses:
        '302':
          description: 'Redirect after deleting the user.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successfully deleted user. Redirect to login form.'
                  value: '/auction'
                302Failure:
                  description: 'Failed to delete user. Redirect to user profile.'
                  value: '/users/{username}'
    put:
      operationId: R108
      summary: 'R108: Edit user'
      description: 'Edit the current authenticated user. Access: OWN'
      tags:
        - 'M01: Authentication and Profile'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                username:
                  type: string
                contact:
                  type: string
                description:
                  type: string
                picture:
                  type: string
                  format: binary
              required:
                - name
                - username
                - email
                - password
                - contact
                - description

      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful update of user. Redirect to user profile.'
                  value: '/users/{username}'
                302Failure:
                  description: 'Failed update user. Redirect to user profile.'
                  value: '/users/{username}'
  
  /api/user:
    get:
      operationId: R109
      summary: 'R109: Search Users API'
      description: 'Searches for works and returns the results as JSON. Access: USR'
      tags:
         - 'M01: Authentication and Profile'
      parameters:
        - in: query
          name: query
          description: String to use for full-text search
          schema:
            type: string
          required: false
      responses:
        '200':
          description: 'Ok. Return json object with auctions found'

  /api/user/{username}/balance:
    put:
      operationId: R110
      summary: 'R110: Add user balance'
      description: 'Add value to users balance. Access: OWN'
      tags:
        - 'M01: Authentication and Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                addBalance:
                  type: integer
      responses:
        '200': 
          description: 'Ok. Balance updated.'
        '401':
          description: 'Unauthorized.'


# M02: Auctions

  /auction/create:
    get:
      operationId: R201
      summary: 'R201: Auction Creation Form'
      description: 'Provide new auction creation form. Access: USR'
      tags:
        - 'M02: Auctions'
      responses:
        '200':
          description: 'Ok. Show auction creation UI'
        '302':
          description: 'Redirect because is an unauthorized user '
          headers:
            Location:
              schema:
                type: string
              examples:
                302Failure:
                  description: 'Unauthorized. You need to be an admin'
                  value: '/login'

  /auction/{id}/update:
    get:
      operationId: R202
      summary: 'R202: Auction Update Form'
      description: 'Provide new auction update form. Access: OWN ADM'
      tags:
        - 'M02: Auctions'
      parameters:
        - in: query
          name: id
          description: id of the auction to be updated
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'Ok. Show auction creation UI'
        '401':
          description: 'You must be the auction owner or an admin'

  /auction/{id}:
    get:
      operationId: R203
      summary: 'R203: View auction'
      description: 'Show the individual auction. Access: PUB'
      tags:
        - 'M02: Auctions'
      responses:
        '200':
          description: 'Ok. Show view Auction UI'

    put:
      operationId: R204
      summary: 'R204: Auction Update'
      description: 'Processes the auction update form . Access: OWN ADM'
      tags:
        - 'M02: Auctions'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                startDate:
                  type: string
                startPrice:
                  type: number
                minBidDif:
                  type: number
                photo:
                  type: string
                  format: binary
                description:
                  type: string
                categoryId:
                  type: integer
                manufactorId:
                  type: integer

      responses:
        '302':
          description: 'Redirect after processing the new auction.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful update. Redirect to auction UI.'
                  value: '/auction/{id}'
                302Failure:
                  description: 'Failed update. Redirect to auction UI.'
                  value: '/auction/{id}'

    delete:
      operationId: R205
      summary: 'R205: Delete auction'
      description: 'Delete auction. Access: OWN ADM'
      tags:
        - 'M02: Auctions'
      responses:
        '302':
          description: 'Redirect after deleting auction.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful deletion. Redirect to auctions page'
                  value: '/auction'
                302Failure:
                  description: 'Failed to delete auction. Redirect to auction that wasnt deleted.'
                  value: '/auction/{id}'
        '401':
          description: 'You must be the auction owner or an admin'
      
  /auction:
    get:
      operationId: R206
      summary: 'R206: View auctions'
      description: 'Show auctions. Access: PUB'
      tags:
        - 'M02: Auctions'
      parameters:
        - in: query
          name: ongoing
          description: boolean with ongoing flag value
          schema:
            type: boolean
          required: true
      responses:
        '200':
          description: 'Ok. Show view Auction UI'
    post:
      operationId: R207
      summary: 'R207: Auction Creation'
      description: 'Processes the new auction creation form submission. Access: OWN'
      tags:
        - 'M02: Auctions'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                startDate:
                  type: string
                startPrice:
                  type: number
                minBidDif:
                  type: number
                photo:
                  type: string
                  format: binary
                description:
                  type: string
                categoryId:
                  type: integer
                manufactorId:
                  type: integer
              required:
                - name
                - startDate
                - startPrice
                - minBidDif
                - description
                - categoryId
                - manufactorId

      responses:
        '302':
          description: 'Redirect after processing the new auction.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful addition. Redirect to auction UI.'
                  value: '/auction/{id}'
                302Failure:
                  description: 'Failed authentication. Redirect to auction creation form.'
                  value: '/auction/create'

  /api/auction:
    get:
      operationId: R208
      summary: 'R208: Search Auctions API'
      description: 'Searches for auctions and returns the results as JSON. Access: PUB'
      tags:
        - 'M02: Auctions'
      parameters:
        - in: query
          name: ongoing
          description: boolean with ongoing flag value
          schema:
            type: boolean
          required: true
        - in: query
          name: query
          description: String to use for full-text search
          schema:
            type: string
          required: false
        - in: query
          name: categoryId
          description: id of the category of the auction
          schema:
            type: integer
          required: false
        - in: query
          name: minPrice
          description: minimum bid price
          schema:
            type: integer
          required: false
        - in: query
          name: maxPrice
          description: maximum bid price
          schema:
            type: integer
          required: false
        - in: query
          name: order
          description: Order to be used displaying auctions
          schema:
            type: string
          required: false
      responses:
        '200':
          description: 'Ok. Return json object with auctions found'
  /user/{username}/auction:
    get:
      operationId: R209
      summary: 'R209: View user auctions'
      description: 'Show user auctions. Access: USR'
      tags:
        - 'M02: Auctions'
      responses:
        '200':
          description: 'Ok. View user auctions'

# M03: Bids
  /api/bid:
    post:
      operationId: R301
      summary: 'R301: Make bid'
      description: 'Authenticated user submits a bid. Access: USR'
      tags:
        - 'M03: Bids'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                auctionid:
                  type: integer
                value:
                  type: number
              required:
                - auctionid
                - value
      
      responses:
        '201':
          description: 'Bid made successfully'
        '500':
          description: 'Failure'
  
  /user/{username}/bid:
    get:
      operationId: R302
      summary: 'R302: View the list of bids made by a user'
      description: 'View the bids of an authenticated user. Access: USR'
      tags:
        - 'M03: Bids'
      responses:
        '200':
          description: 'Ok. Show view bids UI'     

  /auction/{auctionid}/bid:
    get:
      operationId: R303
      summary: 'R303: View the auction past bids'
      description: 'Show the historic of bids of an auction. Access: PUB'
      tags:
        - 'M03: Bids'
      responses:
        '200':
          description: 'Ok.'


# M04: Notifications, Follows, Reviews

  /api/notification/{n}:
    get:
      operationId: R401
      summary: 'R401: Latests Notifications '
      description: 'Show the Lastests n Notification. Access: USR'
      tags:
        - 'M04: Notifications, Follows, Reviews'

      responses:
        '200':
          description: 'Ok. Send latests notifications'
        '401':
          description: 'Unauthorized. You need to login first'

  
  /user/{username}/review:
    get:
      operationId: R402
      summary: 'R402: View user reviews'
      description: 'Show the individual user reviews. Access: USR'
      tags:
        - 'M04: Notifications, Follows, Reviews'
      responses:
        '200':
          description: 'Ok. Show user reviews'
        '302':
          description: 'Redirect because is an unauthorized user '
          headers:
            Location:
              schema:
                type: string
              examples:
                302Failure:
                  description: 'Unauthorized. You need to be an admin'
                  value: '/login'  
    post:
      operationId: R403
      summary: 'R403: Create user review'
      description: 'Create a review for the user. Access: USR'
      tags:
        - 'M04: Notifications, Follows, Reviews'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                rating:          # <!--- form field name
                  type: integer
                comment:    # <!--- form field name
                  type: string
              required:
                - rating
                - comment
      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful review of user. Redirect to review.'
                  value: '/users/{username}/reviews/{review_id}'
                302Failure:
                  description: 'Failed review of user. Redirect to user profile.'
                  value: '/users/{username}'

  /api/follow:
    post:
      operationId: R404
      summary: 'R404: Follow an auction'
      description: 'Authenticated user follows an auction. Access: USR'
      tags:
        - 'M04: Notifications, Follows, Reviews'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                auctionid:
                  type: integer
              required:
                - auctionid
      responses:
        '201':
          description: 'Successfully followed auction'
        '500':
          description: 'Something unexpected happened'
    delete:
      operationId: R405
      summary: 'R405: Stop following an auction'
      description: 'Authenticated user stops following an auction. Access: USR'
      tags:
        - 'M04: Notifications, Follows, Reviews'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                auctionid:
                  type: integer
              required:
                - auctionid
      responses:
        '201':
          description: 'Successfully followed auction'
        '500':
          description: 'Something unexpected happened'


  /user/{username}/follow:
    get:
      operationId: R406
      summary: 'R406: View auctions that user follows'
      description: 'Show the auctions that the user follows. Access: USR'
      tags:
        - 'M04: Notifications, Follows, Reviews'
      responses:
        '200':
          description: 'Ok. Show auctions being followed UI'
# M05: Admin Area and Reports
    
  /admin:
    get:
      operationId: R501
      summary: 'R501: Admin Page'
      description: 'Admin page to manage the web aplication. Access: ADM'
      tags:
        - 'M05: Admin Area and Reports'

      responses:
        '200':
          description: 'Ok. Show admin page'
        '302':
          description: 'Redirect because is an unauthorized user '
          headers:
            Location:
              schema:
                type: string
              examples:
                302Failure:
                  description: 'Unauthorized. You need to be an admin'
                  value: '/login'
  

  /admin/report:
    get:
      operationId: R502
      summary: 'R502: Get reports Page'
      description: 'Get Reports Page. Access: ADM'
      tags:
        - 'M05: Admin Area and Reports'
      parameters:
        - in: query
          name: state 
          description: state of the reports
          schema:
            type: string
          required: false
        - in: query
          name: reporterid
          description: Id of the users that report
          schema:
            type: integer
          required: false
        - in: query
          name: reportedId
          description: id of the user that is being reported
          schema:
            type: integer
          required: false
        - in: query
          name: minDate
          description: Min date of the Report
          schema:
            type: string
          required: false
        - in: query
          name: maxDate
          description: Max date of the Report
          schema:
            type: string
          required: false
        - in: query
          name: order
          description: Order to be used displaying reports
          schema:
            type: string
          required: false
      responses:
        '200':
          description: 'Ok. Show reports found'
        '302':
          description: 'Redirect because is an unauthorized user '
          headers:
            Location:
              schema:
                type: string
              examples:
                302Failure:
                  description: 'Unauthorized. You need to be an admin'
                  value: '/login'

  /admin/report/{id}:
    get:
      operationId: R504
      summary: 'R504: Show Report Page'
      description: 'Show page of a single report. Access: ADM'
      tags:
        - 'M05: Admin Area and Reports'
      responses:
        '200':
          description: 'Ok. Show report page'
        
        '302':
          description: 'Redirect because is an unauthorized user '
          headers:
            Location:
              schema:
                type: string
              examples:
                302Failure:
                  description: 'Unauthorized. You need to be an admin'
                  value: '/login'

        '404':
          description: 'Report Not Found'
    put:
      operationId: R503
      summary: 'R503: Edit report page'
      description: 'Updates the state of the report. Access: ADM'
      tags:
        - 'M05: Admin Area and Reports'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                state:
                  type: string
                reportid:
                  type: integer
      responses:
        '302':
          description: 'Redirect because it is an unauthorized user '
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Report successfully updated'
                  value: '/admin/report/{id}'
                302Failure:
                  description: 'Unauthorized. You need to be an admin'
                  value: '/login'



  /user/{username}/report:
    post:
      operationId: R505
      summary: 'R505: Report user'
      description: 'Report a user. Access: USR'
      tags:
        - 'M05: Admin Area and Reports'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                reason:          # <!--- form field name
                  type: string
              required:
                - reason
      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful report of user. Redirect to user profile.'
                  value: '/users/{username}'
                302Failure:
                  description: 'Failed report of user. Redirect to user profile.'
                  value: '/users/{username}'
  
  
# M06: Static/Home pages

  /contact-us:
    get:
      operationId: R601
      summary: 'R601: Contact Us'
      description: 'Contact Us page. Access: Pub'
      tags:
        - 'M06: Static/Home pages'
      responses:
        '200':
          description: 'Ok. Show log-in UI'
  /FAQ:
    get:
      operationId: R602
      summary: 'R602: FAQ'
      description: 'Frequently Asked Questions Page. Access: PUB'
      tags:
        - 'M06: Static/Home pages'
      responses:
        '200':
          description: 'Ok. Show log-in UI'

  /about:
    get:
      operationId: R603
      summary: 'R603: About'
      description: 'About page. Access: PUB'
      tags:
        - 'M06: Static/Home pages'
      responses:
        '200':
          description: 'Ok. Show log-in UI'

  /:
    get:
      operationId: R604
      summary: 'R604: Home page'
      description: 'Home page. Access: PUB'
      tags:
        - 'M06: Static/Home pages'
      responses:
        '200':
          description: 'Ok. Show log-in UI'


    